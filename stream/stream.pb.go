// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stream.proto

package stream

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_go "github.com/prometheus/client_model/go"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StreamType int32

const (
	StreamType_UNKNOWN_STREAM_TYPE StreamType = 0
	StreamType_STREAM              StreamType = 1
	StreamType_GET_AND_WATCH       StreamType = 2
)

var StreamType_name = map[int32]string{
	0: "UNKNOWN_STREAM_TYPE",
	1: "STREAM",
	2: "GET_AND_WATCH",
}

var StreamType_value = map[string]int32{
	"UNKNOWN_STREAM_TYPE": 0,
	"STREAM":              1,
	"GET_AND_WATCH":       2,
}

func (x StreamType) String() string {
	return proto.EnumName(StreamType_name, int32(x))
}

func (StreamType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{0}
}

type StreamRequest struct {
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RequesterName string `protobuf:"bytes,2,opt,name=requesterName,proto3" json:"requesterName,omitempty"`
	//    bool   expectHello = 3; // expect hello message from server side
	DisconnectOnBackpressure bool     `protobuf:"varint,4,opt,name=disconnect_on_backpressure,json=disconnectOnBackpressure,proto3" json:"disconnect_on_backpressure,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{0}
}

func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(m, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

func (m *StreamRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StreamRequest) GetRequesterName() string {
	if m != nil {
		return m.RequesterName
	}
	return ""
}

func (m *StreamRequest) GetDisconnectOnBackpressure() bool {
	if m != nil {
		return m.DisconnectOnBackpressure
	}
	return false
}

type StreamEvent struct {
	Key                  []byte    `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                []byte    `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Metadata             *Metadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StreamEvent) Reset()         { *m = StreamEvent{} }
func (m *StreamEvent) String() string { return proto.CompactTextString(m) }
func (*StreamEvent) ProtoMessage()    {}
func (*StreamEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{1}
}

func (m *StreamEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEvent.Unmarshal(m, b)
}
func (m *StreamEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEvent.Marshal(b, m, deterministic)
}
func (m *StreamEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEvent.Merge(m, src)
}
func (m *StreamEvent) XXX_Size() int {
	return xxx_messageInfo_StreamEvent.Size(m)
}
func (m *StreamEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEvent.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEvent proto.InternalMessageInfo

func (m *StreamEvent) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *StreamEvent) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *StreamEvent) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Metadata struct {
	EventTimestamp        int64             `protobuf:"varint,1,opt,name=EventTimestamp,proto3" json:"EventTimestamp,omitempty"`
	OriginStreamTimestamp int64             `protobuf:"varint,2,opt,name=OriginStreamTimestamp,proto3" json:"OriginStreamTimestamp,omitempty"`
	StreamTimestamp       int64             `protobuf:"varint,3,opt,name=StreamTimestamp,proto3" json:"StreamTimestamp,omitempty"`
	KeyValue              map[string]string `protobuf:"bytes,4,rep,name=keyValue,proto3" json:"keyValue,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{2}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetEventTimestamp() int64 {
	if m != nil {
		return m.EventTimestamp
	}
	return 0
}

func (m *Metadata) GetOriginStreamTimestamp() int64 {
	if m != nil {
		return m.OriginStreamTimestamp
	}
	return 0
}

func (m *Metadata) GetStreamTimestamp() int64 {
	if m != nil {
		return m.StreamTimestamp
	}
	return 0
}

func (m *Metadata) GetKeyValue() map[string]string {
	if m != nil {
		return m.KeyValue
	}
	return nil
}

type StreamDefinition struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DataType             string     `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
	StreamType           StreamType `protobuf:"varint,3,opt,name=streamType,proto3,enum=stream.StreamType" json:"streamType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StreamDefinition) Reset()         { *m = StreamDefinition{} }
func (m *StreamDefinition) String() string { return proto.CompactTextString(m) }
func (*StreamDefinition) ProtoMessage()    {}
func (*StreamDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{3}
}

func (m *StreamDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDefinition.Unmarshal(m, b)
}
func (m *StreamDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDefinition.Marshal(b, m, deterministic)
}
func (m *StreamDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDefinition.Merge(m, src)
}
func (m *StreamDefinition) XXX_Size() int {
	return xxx_messageInfo_StreamDefinition.Size(m)
}
func (m *StreamDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDefinition proto.InternalMessageInfo

func (m *StreamDefinition) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StreamDefinition) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *StreamDefinition) GetStreamType() StreamType {
	if m != nil {
		return m.StreamType
	}
	return StreamType_UNKNOWN_STREAM_TYPE
}

type Metrics struct {
	Metrics              []*_go.MetricFamily `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Metrics) Reset()         { *m = Metrics{} }
func (m *Metrics) String() string { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()    {}
func (*Metrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{4}
}

func (m *Metrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics.Unmarshal(m, b)
}
func (m *Metrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics.Marshal(b, m, deterministic)
}
func (m *Metrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics.Merge(m, src)
}
func (m *Metrics) XXX_Size() int {
	return xxx_messageInfo_Metrics.Size(m)
}
func (m *Metrics) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics proto.InternalMessageInfo

func (m *Metrics) GetMetrics() []*_go.MetricFamily {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func init() {
	proto.RegisterEnum("stream.StreamType", StreamType_name, StreamType_value)
	proto.RegisterType((*StreamRequest)(nil), "stream.StreamRequest")
	proto.RegisterType((*StreamEvent)(nil), "stream.StreamEvent")
	proto.RegisterType((*Metadata)(nil), "stream.Metadata")
	proto.RegisterMapType((map[string]string)(nil), "stream.Metadata.KeyValueEntry")
	proto.RegisterType((*StreamDefinition)(nil), "stream.StreamDefinition")
	proto.RegisterType((*Metrics)(nil), "stream.Metrics")
}

func init() {
	proto.RegisterFile("stream.proto", fileDescriptor_bb17ef3f514bfe54)
}

var fileDescriptor_bb17ef3f514bfe54 = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x53, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0x26, 0xc9, 0xe8, 0xd2, 0x5b, 0x33, 0xc2, 0x8d, 0x89, 0x2a, 0x0f, 0x68, 0x8a, 0x10, 0x9a,
	0x10, 0x8a, 0x50, 0x41, 0x08, 0x0d, 0x1e, 0x28, 0x34, 0x0c, 0xa9, 0x6a, 0x8a, 0xdc, 0xc0, 0xc4,
	0x53, 0x94, 0x65, 0x06, 0xac, 0x36, 0x4e, 0x49, 0xd2, 0x4a, 0xf9, 0x05, 0x3c, 0xf0, 0xa7, 0x71,
	0xec, 0x34, 0x5d, 0xab, 0xbd, 0xdd, 0x7d, 0xdf, 0x67, 0xdf, 0x7d, 0xe7, 0x33, 0xf4, 0x8a, 0x32,
	0xa7, 0x71, 0xea, 0x2d, 0xf3, 0xac, 0xcc, 0xb0, 0xa3, 0x32, 0xc7, 0x4a, 0x69, 0x99, 0xb3, 0xa4,
	0x50, 0xb0, 0xfb, 0x57, 0x03, 0x6b, 0x26, 0x19, 0x42, 0xff, 0xac, 0x68, 0x51, 0x22, 0xc2, 0x01,
	0x8f, 0x53, 0xda, 0xd7, 0xce, 0xb4, 0xf3, 0x2e, 0x91, 0x31, 0x3e, 0x05, 0x2b, 0x57, 0x34, 0xcd,
	0x83, 0x9a, 0xd4, 0x25, 0xb9, 0x0b, 0xe2, 0x7b, 0x70, 0x6e, 0x58, 0x91, 0x64, 0x9c, 0xd3, 0xa4,
	0x8c, 0x32, 0x1e, 0x5d, 0xc7, 0xc9, 0x7c, 0x99, 0xd3, 0xa2, 0x58, 0xe5, 0xb4, 0x7f, 0x20, 0x8e,
	0x98, 0xa4, 0xbf, 0x55, 0x4c, 0xf9, 0xc7, 0x5b, 0xbc, 0x9b, 0xc0, 0x91, 0x6a, 0xc4, 0x5f, 0x53,
	0x5e, 0xa2, 0x0d, 0xc6, 0x98, 0x56, 0xb2, 0x8b, 0x1e, 0xa9, 0x43, 0x7c, 0x04, 0xf7, 0xbf, 0xc7,
	0x8b, 0x95, 0x2a, 0xde, 0x23, 0x2a, 0xc1, 0x17, 0x60, 0x0a, 0x47, 0xf1, 0x4d, 0x5c, 0xc6, 0x7d,
	0x43, 0x10, 0x47, 0x03, 0xdb, 0x6b, 0x8c, 0x4f, 0x1a, 0x9c, 0xb4, 0x0a, 0xf7, 0x9f, 0x0e, 0xe6,
	0x06, 0xc6, 0x67, 0x70, 0x2c, 0x6b, 0x85, 0x2c, 0x15, 0x26, 0xe2, 0x74, 0x29, 0xab, 0x19, 0x64,
	0x0f, 0xc5, 0xd7, 0x70, 0x3a, 0xcd, 0xd9, 0x2f, 0xc6, 0x55, 0x7f, 0x5b, 0xb9, 0x2e, 0xe5, 0x77,
	0x93, 0x78, 0x0e, 0x0f, 0xf6, 0xf5, 0x86, 0xd4, 0xef, 0xc3, 0x78, 0x01, 0xe6, 0x9c, 0x56, 0xca,
	0xdb, 0xc1, 0x99, 0x21, 0x2c, 0x3c, 0xd9, 0xb7, 0xe0, 0x8d, 0x1b, 0x81, 0xcf, 0xcb, 0xbc, 0x22,
	0xad, 0xde, 0x79, 0x07, 0xd6, 0x0e, 0x55, 0xcf, 0x6d, 0xde, 0xcc, 0xad, 0x4b, 0xea, 0xb0, 0x9e,
	0xdb, 0xba, 0x9d, 0x5b, 0x97, 0xa8, 0xe4, 0x42, 0x7f, 0xab, 0xb9, 0x6b, 0xb0, 0x55, 0x2f, 0x23,
	0xfa, 0x93, 0x71, 0x56, 0xb2, 0x8c, 0xdf, 0xf9, 0xfc, 0x0e, 0x98, 0x75, 0x13, 0x61, 0xb5, 0xdc,
	0x5c, 0xd2, 0xe6, 0x38, 0x00, 0x50, 0xbd, 0x4a, 0xb6, 0x76, 0x78, 0x3c, 0xc0, 0x4d, 0xfb, 0xb3,
	0x96, 0x21, 0xb7, 0x54, 0xee, 0x25, 0x1c, 0x4e, 0xd4, 0x16, 0x8a, 0x9d, 0x39, 0x6c, 0x16, 0x52,
	0x54, 0xac, 0xad, 0xbb, 0x1e, 0xcb, 0xea, 0xdd, 0x14, 0xe8, 0x6f, 0xba, 0x2a, 0xbc, 0x64, 0xc1,
	0xc4, 0x63, 0x78, 0x4a, 0xff, 0x39, 0x4e, 0xd9, 0xa2, 0x22, 0x9b, 0x23, 0xcf, 0x47, 0x00, 0xdb,
	0x12, 0xf8, 0x18, 0x4e, 0xbe, 0x05, 0xe3, 0x60, 0x7a, 0x15, 0x44, 0xb3, 0x90, 0xf8, 0xc3, 0x49,
	0x14, 0xfe, 0xf8, 0xea, 0xdb, 0xf7, 0x10, 0xa0, 0xa3, 0x00, 0x5b, 0xc3, 0x87, 0x60, 0x5d, 0xfa,
	0x61, 0x34, 0x0c, 0x46, 0xd1, 0xd5, 0x30, 0xfc, 0xf4, 0xc5, 0xd6, 0x07, 0x1f, 0x04, 0x2d, 0x6f,
	0xc1, 0x37, 0x6d, 0x74, 0xba, 0x6b, 0xa1, 0xf9, 0x1c, 0xce, 0xc9, 0x2e, 0x2c, 0x17, 0xe5, 0xa5,
	0x76, 0xdd, 0x91, 0x9f, 0xe9, 0xd5, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x69, 0xe0, 0x2b,
	0x73, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StreamClient is the client API for Stream service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamClient interface {
	Stream(ctx context.Context, in *StreamRequest, opts ...grpc.CallOption) (Stream_StreamClient, error)
}

type streamClient struct {
	cc grpc.ClientConnInterface
}

func NewStreamClient(cc grpc.ClientConnInterface) StreamClient {
	return &streamClient{cc}
}

func (c *streamClient) Stream(ctx context.Context, in *StreamRequest, opts ...grpc.CallOption) (Stream_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Stream_serviceDesc.Streams[0], "/stream.Stream/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &streamStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Stream_StreamClient interface {
	Recv() (*StreamEvent, error)
	grpc.ClientStream
}

type streamStreamClient struct {
	grpc.ClientStream
}

func (x *streamStreamClient) Recv() (*StreamEvent, error) {
	m := new(StreamEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StreamServer is the server API for Stream service.
type StreamServer interface {
	Stream(*StreamRequest, Stream_StreamServer) error
}

// UnimplementedStreamServer can be embedded to have forward compatible implementations.
type UnimplementedStreamServer struct {
}

func (*UnimplementedStreamServer) Stream(req *StreamRequest, srv Stream_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}

func RegisterStreamServer(s *grpc.Server, srv StreamServer) {
	s.RegisterService(&_Stream_serviceDesc, srv)
}

func _Stream_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StreamServer).Stream(m, &streamStreamServer{stream})
}

type Stream_StreamServer interface {
	Send(*StreamEvent) error
	grpc.ServerStream
}

type streamStreamServer struct {
	grpc.ServerStream
}

func (x *streamStreamServer) Send(m *StreamEvent) error {
	return x.ServerStream.SendMsg(m)
}

var _Stream_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stream.Stream",
	HandlerType: (*StreamServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Stream_Stream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "stream.proto",
}
